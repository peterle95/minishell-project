< file1 cat > file1 > file2 -e | wc -l

//lexer goes through each element of the line + stores in 2dimensional array elements
//divided by space
char **elements 
element[0] = "<"
element[1] = "file1"
element[2] = "cat";
etc. 

//parsing assigns into categories of types from struct with grammar rules
// divided by pipes 

z.B. erste node of command list: 
kommt das rein < file1 cat > file1 > file2 -e 

nach der pipe gehen wir einen weiter in der command list (mit next pointer)
wc -l

struct for linked list of commands
	char **words 
	< char *redirection_in //immer die naechste inredirection ersetzt die davor 
	> char **redirection_out  //jede output redirection einzeln speichern
	<< heredoc 
	>> append
	
	int cmd_index;
	struct *next

words[0] = "cat"
words[1] = "-e"
redirection_in = "file1"
w

enn <
dann store das darauffolgende wort in 

ls -l
< file1 cat 
< file1 cat | wc -l
